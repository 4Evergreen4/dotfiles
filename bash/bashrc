######################
# Evergreen's bashrc #
######################

#########################
# ENVIRONMENT VARIABLES #
#########################

# This script is sourced by bash_profile, so this is a reasonable place to
# put them.  (and it is before the interactivity check)
export EDITOR=vim

# use nvim if it is available
type -P nvim >/dev/null && export EDITOR=nvim

# List of directories to add to PATH if they exist.
path_add=("$HOME/bin" "$HOME/.gem/ruby/2.2.0/bin")

for dir in "${path_add[@]}"; do
	[[ -d $dir ]] && PATH+=:"$dir"
done
export PATH

# better yaourt colors
export YAOURT_COLORS="nb=1:pkg=1:ver=1;32:lver=1;45:installed=1;42:grp=1;34:od=1;41;5:votes=1;44:dsc=0:other=1;35"

# Shell is non-interactive.  Be done now!
if [[ $- != *i* ]]; then
	return
fi

###########
# OPTIONS #
###########

# Bash won't get SIGWINCH if another process is in the foreground.
# Enable checkwinsize so that bash will check the terminal size when
# it regains control.  #65623
# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
shopt -s checkwinsize
shopt -s expand_aliases
# moar globbing (don't use this in scripts)
shopt -s extglob
# once again, don't use this in scripts, just use for one-shots
shopt -s globstar
# Enable history appending instead of overwriting.
shopt -s histappend

###########
# ALIASES #
###########

# confirm before overwriting something
alias cp="cp -i"
# human-readable sizes
alias df="df -h"
# editor shortcut
alias e="$EDITOR"

#####################
# COLORS AND PROMPT #
#####################

# This sets up dircolors and the prompt based on whether a colorful terminal is
# being used,

use_color=false
# Check to see if output is a terminal and see if tput exists
if [[ -t 1 ]] && type -P tput >/dev/null; then
	# Get number of colors, and set use_color to true if it is greater than 8
	ncolors="$(tput colors)"
	[[ -n $ncolors && $ncolors -ge 8 ]] && use_color=true
fi

if ${use_color}; then
	# Do stuff for colorful terminals.

	# Set colors for ls using dircolors.  Prefer ~/.dir_colors over
	# /etc/DIR_COLORS, and use defaults if no configs are available.
	if type -P dircolors >/dev/null; then
		if [[ -f ~/.dir_colors ]]; then
			eval $(dircolors -b ~/.dir_colors)
		elif [[ -f /etc/DIR_COLORS ]]; then
			eval $(dircolors -b /etc/DIR_COLORS)
		else
			eval $(dircolors -b)
		fi
	fi

	# Get whether the user is root or not, and change prompt accordingly.
	if [[ "$EUID" -eq 0 ]]; then
		# Root prompt.
		PS1='\n┌(\[$(tput setaf 1)\]\u@\H\[$(tput sgr0)\])-(\[$(tput setaf 6)\]\@ \d\[$(tput sgr0)\])\n└(\[$(tput bold)\]\w\[$(tput sgr0)\])-# '
	else
		# Regular user prompt.
		PS1='\n┌(\[$(tput setaf 2)\]\u@\H\[$(tput sgr0)\])-(\[$(tput setaf 6)\]\@ \d\[$(tput sgr0)\])\n└(\[$(tput bold)\]\w\[$(tput sgr0)\])-$ '
	fi

	# Make ls and grep use color.
	alias ls='ls --color=auto'
	alias grep='grep --colour=auto'
	alias egrep='egrep --colour=auto'
	alias fgrep='fgrep --colour=auto'
else
	# Do stuff for non-colorful terminals.

	if [[ "$EUID" -eq 0 ]]; then
		# Non-colored root prompt
		PS1='\n┌(\u@\H)-(\@ \d)\n└(\w)-# '
	else
		# Non-colored regular user prompt
		PS1='\n┌(\u@\H)-(\@ \d)\n└(\w)-$ '
	fi
fi

# Sanitize term by replacing all non-alphanumeric characters with "?".
safe_term=${TERM//[^[:alnum:]]/?}

# If $TERM has xterm in the name, it probably has 256 color support.  This is for
# tmux.
if [[ "$safe_term" == *"xterm"* ]]; then
	export TERM="screen-256color"
fi

# Unset use_color
unset use_color safe_term

########
# MISC #
########

# Use bash_completion if it is available.
[ -r /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion
