######################
# Evergreen's bashrc #
######################

#########################
# ENVIRONMENT VARIABLES #
#########################

# This script is sourced by bash_profile, so this is a reasonable place to
# put them.  (and it is before the interactivity check)
export EDITOR=vim

# use nvim if it is available
type -P nvim >/dev/null && export EDITOR=nvim

# List of directories to add to PATH if they exist.
path_add=( \
	"$HOME/bin" "$HOME/.gem/ruby/2.3.0/bin" "$HOME/.gem/ruby/2.2.0/bin" \
	"$HOME/.cargo/bin" "$HOME/.cabal/bin" "$HOME/.local/bin" \
)

for dir in "${path_add[@]}"; do
	[[ -d $dir ]] && PATH+=:"$dir"
done
export PATH

# better yaourt colors
export YAOURT_COLORS="nb=1:pkg=1:ver=1;32:lver=1;45:installed=1;42:grp=1;34:od=1;41;5:votes=1;44:dsc=0:other=1;35"

# Shell is non-interactive.  Be done now!
if [[ $- != *i* ]]; then
	return
fi

#############
# FUNCTIONS #
#############

progexists() {
	command -v "$1" >/dev/null 2>&1
	return
}

###########
# OPTIONS #
###########

# Bash won't get SIGWINCH if another process is in the foreground.
# Enable checkwinsize so that bash will check the terminal size when
# it regains control.  #65623
# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
shopt -s checkwinsize
shopt -s expand_aliases
# moar globbing (don't use this in scripts)
shopt -s extglob
# once again, don't use this in scripts, just use for one-shots
shopt -s globstar
# Enable history appending instead of overwriting.
shopt -s histappend

###########
# ALIASES #
###########

# confirm before overwriting something
alias cp="cp -i"
# human-readable sizes
alias df="df -h"
# editor shortcut
alias e="\$EDITOR"

##########
# COLORS #
##########

use_color=false
use_256color=false
# Check to see if output is a terminal and see if tput exists
if [[ -t 1 ]] && progexists "tput"; then
	# Get number of colors, and set use_color to true if it is greater than 8
	ncolors="$(tput colors)"
	[[ -n $ncolors && $ncolors -ge 8 ]] && use_color=true
	[[ -n $ncolors && $ncolors -ge 256 ]] && use_256color=true
fi

# Set color variables to empty strings so that they will do nothing when in a
# terminal that supports < 8 colors.
R=""
G=""
Y=""
B=""
M=""
C=""
X=""
BD=""
if ${use_color}; then
	# Do stuff for 8+ color terminals.

	# Set colors for ls using dircolors.  Prefer ~/.dir_colors over
	# /etc/DIR_COLORS, and use defaults if no configs are available.
	if type -P dircolors >/dev/null; then
		if [[ -f ~/.dir_colors ]]; then
			eval $(dircolors -b ~/.dir_colors)
		elif [[ -f /etc/DIR_COLORS ]]; then
			eval $(dircolors -b /etc/DIR_COLORS)
		else
			eval $(dircolors -b)
		fi
	fi

	# Colors for prompt
	# Red
	R="\[$(tput setaf 1)\]"
	# Green
	G="\[$(tput setaf 2)\]"
	# Yellow
	Y="\[$(tput setaf 3)\]"
	# Blue
	B="\[$(tput setaf 4)\]"
	# Magenta
	M="\[$(tput setaf 5)\]"
	# Cyan
	C="\[$(tput setaf 6)\]"
	# Reset
	X="\[$(tput sgr0)\]"
	# Bold
	BD="\[$(tput bold)\]"

	# Make ls and grep use color.
	alias ls='ls --color=auto'
	alias grep='grep --colour=auto'
	alias egrep='egrep --colour=auto'
	alias fgrep='fgrep --colour=auto'
elif ${use_256color}; then
	# Do stuff for 256+ color terminals

	# Make tmux use 256 colors
	export TERM="screen-256color"
fi

# In the rare case that a terminal supports 256 colors but tput doesn't report
# it, it is safe to assume it supports 256 colors if "256" is in the $TERM
# environment variable.

# Sanitize term by replacing all non-alphanumeric characters with "?".
safe_term=${TERM//[^[:alnum:]]/?}
if [[ "$safe_term" == *"256"* ]]; then 
	export TERM="screen-256color"
fi

##########
# PROMPT #
##########

__ps1_git_branch() {
	if progexists "git" && git branch >/dev/null 2>&1; then
		printf "%s\n" "(git:$(git rev-parse --abbrev-ref HEAD))"
	else
		printf "\n"
	fi
}

# The character(s) right in front of where input is taken
PREFIX="$ "
# The color of the user/hostname portion of the prompt
USRCOLOR=$G

# Get whether the user is root or not, and change prompt accordingly.
if [[ "$EUID" -eq 0 ]]; then
	USRCOLOR=$R
	PREFIX="# "
fi

# Set prompt
PS1="\n┌(${USRCOLOR}\u@\H${X})-(${B}\@ \d${X}) ${M}\$(__ps1_git_branch)${X}\n└(${BD}\w${X})-${PREFIX}"

# Unset variables used for prompt/colors
unset R G Y B M C X BD PREFIX USRCOLOR use_color use_256color safe_term

########
# MISC #
########

# Use bash_completion if it is available.
[ -r /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion

# Source local settings
[[ -f $HOME/.bashrc.local ]] && source "$HOME/.bashrc.local"

########
# TMUX #
########

if progexists "tmux"; then
	# Automatically attach to a session named after the user if not already in
	# tmux, and create the session if it doesn't exist.
	[[ -z $TMUX ]] && tmux new -A -s "$USER"
fi
